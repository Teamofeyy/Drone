name: Test Email Report

on:
  workflow_dispatch:  # Триггер для ручного запуска

jobs:
  test-email:
    runs-on: ubuntu-latest
    env:
      FORCE_JAVASCRIPT_ACTIONS_TO_NODE20: true
    steps:
    - name: Set up Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'  # Использование Node.js 20

    - name: Get closed issues from this week
      run: |
        THIS_WEEK_START="2024-11-18T00:00:00Z"
        echo "Fetching closed issues since: $THIS_WEEK_START"
        response=$(curl -s -H "Authorization: Bearer ${{ secrets.MY_GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/issues?state=closed&since=$THIS_WEEK_START")
        echo "Response from GitHub API: $response"
        echo "$response" | jq -r '.[] | select(.html_url and .title) | "- [\(.title)](\(.html_url))"' > report.txt

    - name: Check if issues were found
      run: |
        if [ -s report.txt ]; then
          echo "Found closed issues"
          cat report.txt
        else
          echo "No closed issues found." > report.txt
        fi

    - name: Encode report content as base64
      id: encode_report
      run: |
        REPORT_CONTENT=$(cat report.txt | base64)
        echo "report_content=$REPORT_CONTENT" >> $GITHUB_ENV

    - name: Send email with report
      uses: dawidd6/action-send-mail@v4
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.EMAIL_USERNAME }}  # Добавьте это в секцию Secrets
        password: ${{ secrets.EMAIL_PASSWORD }}  # Добавьте это в секцию Secrets
        subject: Weekly Closed Issues Report
        body: |
          ${{ env.report_content }}  # Используем переменную для вставки содержимого файла
        to: timarnd06@gmail.com
        from: timarnd06@gmail.com

    - name: Decode report content
      run: |
        echo "$REPORT_CONTENT" | base64 --decode > report_decoded.txt
        cat report_decoded.txt
